class Solution {
    public List<String> addOperators(String num, int target) {
        List<String> res = new ArrayList<>();
        backtracking(res, new String(), num, target, 0, 0, 0);
        return res;
    }
    
    public void backtracking(List<String> res, String tmpRes, String num, int target, int pos, long total, long multi){
        if(pos == num.length()){
            if(target == total){
                res.add(tmpRes);
            }
            return;
        }
        for(int i = pos; i < num.length(); i ++){
            if(i != pos && num.charAt(pos) == '0'){
                break;
            }
            long tmp = Long.parseLong(num.substring(pos, i + 1));
            if(pos == 0){
                backtracking(res, tmpRes + tmp, num, target, i + 1, total + tmp, tmp);
            } else {
                backtracking(res, tmpRes + "+" + tmp, num, target, i + 1, total + tmp, tmp);
                backtracking(res, tmpRes + "-" + tmp, num, target, i + 1, total - tmp, - tmp);
                backtracking(res, tmpRes + "*" + tmp, num, target, i + 1, total - multi + multi * tmp,  multi * tmp);
            }
        }
    }
}
