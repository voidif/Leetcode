class Solution {
    public int kEmptySlots(int[] bulbs, int K) {
        int[] days = new int[bulbs.length];
        for (int i = 0; i < bulbs.length; i++) {
            days[bulbs[i] - 1] = i + 1;
        }
        int leftPos = 0;
        int rightPos = K + 1;
        int minDay = Integer.MAX_VALUE;
        for (int i = 1; i < bulbs.length && rightPos < bulbs.length; i++) {
            if (i == rightPos) {
                minDay = Math.min(Math.max(days[leftPos], days[rightPos]), minDay);
                leftPos = i;
                rightPos = i + K + 1;
            } else if (!(days[i] > days[leftPos] && days[i] > days[rightPos])) {
                leftPos = i;
                rightPos = i + K + 1;
            } 
        }
        return minDay == Integer.MAX_VALUE ? -1: minDay;
    }
}
