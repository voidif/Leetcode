/**
 * Definition for a point.
 * class Point {
 *     int x;
 *     int y;
 *     Point() { x = 0; y = 0; }
 *     Point(int a, int b) { x = a; y = b; }
 * }
 */
class Solution {
    public int maxPoints(Point[] points) {
        Map<Integer, Map<Integer>> recorder = new HashMap<>();
        for(int i = 0; i < points.length; i ++) {
            for(int j = i + 1; j < points.length; j ++) {
                int x0 = points[j].x - points[i].x;
                int y0 = points[j].y - points[i].y;
                //Dealing with overlap points
                if(x0 == 0 && y0 == 0) {
                    //TODO
                }
                int gcd = gcd(x0, y0);
                x0 = x0 / gcd;
                y0 = y0 / gcd;
                //TODO, put them into map
            }
        }
        
    }
    
    //return gcd of a and b, ensuring a/gcd >= 0
    public int gcd(int a, int b) {
        //TODO
    }
}
