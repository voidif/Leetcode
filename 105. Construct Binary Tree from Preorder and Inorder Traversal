/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder.length == 0){
            return null;
        }
        return helper(preorder, 0, inorder, 0, inorder.length);
        
    }
    
    public TreeNode helper(int[] preorder, int pi, int[] inorder, int ii, int length){
        if(length <= 0){
            return null;
        }
        TreeNode root = new TreeNode(preorder[pi]);
        if(length == 1){
            return root;
        }
        for(int i = ii; i < ii + length; i ++){
            if(preorder[pi] == inorder[i]){
                root.left = helper(preorder, pi + 1, inorder, ii, i - ii);
                root.right = helper(preorder, pi + (i - ii) + 1, inorder, i + 1, length - (i - ii + 1));
            }
        }
        return root;
    }
}
