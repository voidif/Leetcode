class NumMatrix {
    private int[][] sum;
    private int[][] matrix;

    public NumMatrix(int[][] matrix) {
        this.matrix = matrix;
        int rowSize = matrix.length;
        int colSize = rowSize > 0 ? matrix[0].length : 0;
        if (rowSize == 0 || colSize == 0) {
            return;
        }
        sum = new int[rowSize][colSize + 1];
        for (int row = 0; row < rowSize; row++) {
            for (int col = 1; col < colSize + 1; col++) {
                sum[row][col] = sum[row][col - 1] + matrix[row][col - 1];
            }
        }
    }
    
    public void update(int row, int col, int val) {
        int diff = val - matrix[row][col];
        matrix[row][col] = val; 
        for (int colIndex = col; colIndex < matrix[0].length; colIndex++) {
            sum[row][colIndex + 1] += diff; 
        }
    }
    
    public int sumRegion(int row1, int col1, int row2, int col2) {
        int result = 0;
        for (int row = row1; row <= row2; row++) {
            result += (sum[row][col2 + 1] - sum[row][col1 + 1 - 1]);
        }
        return result;
    }
}

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix obj = new NumMatrix(matrix);
 * obj.update(row,col,val);
 * int param_2 = obj.sumRegion(row1,col1,row2,col2);
 */
