/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null){
            return null;
        }
        ListNode res = new ListNode((l1.val + l2.val) % 10);
        ListNode left = l1.next;
        ListNode right = l2.next;
        ListNode cur = res;
        int carry = (l1.val + l2.val) / 10;
        while(left != null && right != null) {
            int sum = left.val + right.val + carry;
            cur.next = new ListNode(sum % 10);
            cur = cur.next;
            carry = sum / 10;
            left = left.next;
            right = right.next;
        }
        while(left != null) {
            int sum = left.val + carry;
            cur.next = new ListNode(sum % 10);
            cur = cur.next;
            carry = sum / 10;
            left = left.next;
        }
        while(right != null) {
            int sum = right.val + carry;
            cur.next = new ListNode(sum % 10);
            cur = cur.next;
            carry = sum / 10;
            right = right.next;
        }
        if(carry == 1){
            cur.next = new ListNode(1);
        }
        return res;
    }
}
