/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null){
            return l2;
        }
        if(l2 == null){
            return l1;
        }
        ListNode first = l1;
        ListNode second = l2;
        ListNode res = null;
        if(first.val < second.val){
            res = first;
            first = first.next;
        } else{
            res = second;
            second = second.next;
        }
        ListNode current = res;
        while(first != null && second != null){
            if(first.val < second.val){
                current.next = first;
                first = first.next;
                current = current.next;
            } else {
                current.next = second;
                second = second.next;
                current = current.next;
            } 
        }
        if(first != null){
            current.next = first;
        } else {
            current.next = second;
        }
        return res;
    }
}
