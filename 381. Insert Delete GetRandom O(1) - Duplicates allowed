class RandomizedCollection {

    Map<Integer, LinkedHashSet<Integer>> map;
    ArrayList<Integer> array;
    //LinkedHashSet<Integer> set;
    Random rnd;
    
    /** Initialize your data structure here. */
    public RandomizedCollection() {
        map = new HashMap<>();
        //set = new LinkedHashSet<>();
        array = new ArrayList<>();
        rnd = new Random();
    }
    
    /** Inserts a value to the collection. Returns true if the collection did not already contain the specified element. */
    public boolean insert(int val) {
        if(!map.containsKey(val)){
            map.put(val, new LinkedHashSet<Integer>());
            map.get(val).add(array.size());
            array.add(val);
            return true;
        } else {
            map.get(val).add(array.size());
            array.add(val);
            return false;
        }
        
    }
    
    /** Removes a value from the collection. Returns true if the collection contained the specified element. */
    public boolean remove(int val) {
        if(!map.containsKey(val)){
            return false;
        } else {
            LinkedHashSet<Integer> deleteNumberSet = map.get(val);

            int index = deleteNumberSet.iterator().next();
            
            if(index != array.size() - 1){
                array.set(index, array.get(array.size() - 1));
            
                LinkedHashSet<Integer> moveNumberSet = map.get(array.get(index));
                moveNumberSet.remove(array.size() - 1);
                moveNumberSet.add(index);
                
                if(array.get(index) != val){
                    deleteNumberSet.remove(index);
                }
            } else {
                deleteNumberSet.remove(index);
            }
            
            
            if(deleteNumberSet.isEmpty()){
                map.remove(val);
            }
            
            array.remove(array.size() - 1);
            
            return true;
        }
    }
    
    /** Get a random element from the collection. */
    public int getRandom() {
        int index = rnd.nextInt(array.size());
        return array.get(index);
    }
}

/**
 * Your RandomizedCollection object will be instantiated and called as such:
 * RandomizedCollection obj = new RandomizedCollection();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */
