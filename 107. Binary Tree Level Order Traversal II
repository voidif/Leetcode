/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> tmpRes = new ArrayList<List<Integer>>();
        if(root == null){
            return tmpRes;
        }
        helper(tmpRes, root, 0);
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        for(int i = tmpRes.size() - 1; i >= 0; i --){
            res.add(tmpRes.get(i));
        }
        return res;
    }
    
    public void helper(List<List<Integer>> res, TreeNode root, int index){
        if(index >= res.size()){
            res.add(new ArrayList<Integer>());
        }
        res.get(index).add(root.val);
        if(root.left != null){
            helper(res, root.left, index + 1);
        }
        if(root.right != null){
            helper(res, root.right, index + 1);
        }
    }
}
