/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        ListNode pointer1 = head;
        ListNode pointer2 = head;
        while(pointer1 != null && pointer2 != null){
            pointer1 = pointer1.next;
            pointer2 = pointer2.next;
            if(pointer2 != null){
                pointer2 = pointer2.next;
            }
            if(pointer1 == pointer2 && pointer1 != null){
                return true;
            }
        }
        return false;
    }
}
