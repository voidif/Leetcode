/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head == null || head.next == null){
            return head;
        }
        int count = 0;
        ListNode test = head;
        while(test != null){
            count ++;
            test = test.next;
        }
        if(count < k){
            return head;
        }
        ListNode next = head.next;
        ListNode cur = head;
        ListNode prev = null;
        ListNode newEnd = head;
        for(int i = 0; i < k; i ++){
            cur.next = prev;
            prev = cur;
            cur = next;
            next = (next == null ? null : next.next);
        }
        head = prev;
        newEnd.next = reverseKGroup(cur, k);
        return head;
    }
}
