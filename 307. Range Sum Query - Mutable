//use segement tree
class NumArray {

    private TreeNode root;
    
    public NumArray(int[] nums) {
        if(nums.length == 0){
            return;
        }
        root = initTree(nums, 0, nums.length - 1);
    }
    
    private TreeNode initTree(int[] nums, int begin, int end){
        TreeNode root = new TreeNode(begin, end);
        if(begin >= end){
            root.sum = nums[begin];
            return root;
        } else {
            int mid = begin + (end - begin) / 2;
            root.left = initTree(nums, begin, mid);
            root.right = initTree(nums, mid + 1, end);
            root.sum = root.left.sum + root.right.sum;
            return root;
        }
    }
    
    public void update(int i, int val) {
        updateSum(i, val, root);
    }
    
    private int updateSum(int i, int val, TreeNode root){
        if(root.begin == root.end){
            int diff = val - root.sum;
            root.sum = val;
            return diff;
        }
        int mid = root.begin + (root.end - root.begin) / 2;
        int diff = 0;
        if(mid >= i){
            diff = updateSum(i, val, root.left);
            root.sum = root.sum + diff;
        } else {
            diff = updateSum(i, val, root.right);
            root.sum = root.sum + diff;
        }
        return diff;
    }
    
    public int sumRange(int i, int j) {
        return getSum(root, i, j);
    }
    
    public int getSum(TreeNode root, int i, int j){
        if(root.begin == i && root.end == j){
            return root.sum;
        } else {
            int mid = root.begin + (root.end - root.begin) / 2;
            if(mid >= j){
                return getSum(root.left, i, j);
            }
            if(mid < i){
                return getSum(root.right, i, j);
            }
            return getSum(root.left, i, mid) + getSum(root.right, mid + 1, j);
        }
    }
}

class TreeNode{
    public int sum;
    public int begin;
    public int end;
    public TreeNode left;
    public TreeNode right;
    
    public TreeNode(int begin, int end){
        this.begin = begin;
        this.end = end;
        left = null;
        right = null;
        sum = 0;
    }
    
}

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * obj.update(i,val);
 * int param_2 = obj.sumRange(i,j);
 */
