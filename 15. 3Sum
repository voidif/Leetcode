class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        Arrays.sort(nums);
        for(int i = 0; i < nums.length - 2; i ++){
            if(nums[i] > 0){
                break;
            }
            int sum = 0 - nums[i];
            HashSet<Integer> existed = new HashSet<>();
            int l = i + 1;
            int r = nums.length - 1;
            while(l < r){
                int tmpSum = nums[l] + nums[r];
                if(tmpSum == sum){
                    ArrayList<Integer> tmp = new ArrayList<>();
                    tmp.add(nums[i]);
                    tmp.add(nums[l]);
                    tmp.add(nums[r]);
                    res.add(tmp);
                    while(l < r && nums[l + 1] == nums[l]){
                        l ++;
                    }
                    l ++;
                    while(l < r && nums[r - 1] == nums[r]){
                        r --;
                    }
                    r --;
                } else if(tmpSum < sum){
                    l ++;
                } else if(tmpSum > sum){
                    r --;
                }
            }
            while(i < nums.length - 1 && nums[i + 1] == nums[i]){
                i ++;
            }

        }
        return res;
    }
}
