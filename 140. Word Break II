class Solution {
    public List<String> wordBreak(String s, List<String> wordDict) {
        return dfs(s, wordDict, new HashMap<String, List<String>>());
    }
    
    public List<String> dfs(String s, List<String> dict, HashMap<String, List<String>> map){
        if(map.containsKey(s)){
            return map.get(s);
        }
        List<String> res = new ArrayList<>();
        if(s.length() == 0){
            res.add("");
            return res;
        }
        for(String tmp : dict){
            if(s.startsWith(tmp)){
                List<String> subList = dfs(s.substring(tmp.length(), s.length()), dict, map);
                for(String tmpSub : subList){
                    res.add(tmp + (tmpSub.equals("") ? "" : " " + tmpSub));
                }
            }
        }
        map.put(s, res);
        return res;
    }
}
