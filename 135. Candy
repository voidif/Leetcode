class Solution {
    public int candy(int[] ratings) {
        //key idea: a child's candy is the number of it left and right childs
        //which forms exactly desciding order. so it is max{left, right} + 1
        //so we first looking through left to right, for every ascending order, add by
        //1, if the latter number is smaller, set it to 1. and do it again from right to 
        //left, keep the bigger one from 2 actions. take On time and On space
        
        //corner case
        if(ratings.length <= 1){
            return ratings.length;
        }
        //the candy number array
        int[] candy = new int[ratings.length];
        //left to right
        candy[0] = 1;
        for(int i = 1; i < ratings.length; i ++){
            if(ratings[i] > ratings[i - 1]){
                candy[i] = candy[i - 1] + 1;
            } else {
                candy[i] = 1;
            }
        }
        int res = candy[candy.length - 1];
        //right to left
        for(int i = ratings.length - 2; i >= 0 ; i --){
            if(ratings[i] > ratings[i + 1]){
                candy[i] = Math.max(candy[i + 1] + 1, candy[i]);
            }
            res += candy[i];
        }
        return res;
    }
}
